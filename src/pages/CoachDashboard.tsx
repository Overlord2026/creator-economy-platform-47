import React from 'react';
import { ThreeColumnLayout } from '@/components/layout/ThreeColumnLayout';
import { Card, CardContent, CardDescription, CardHeader, CardTitle } from '@/components/ui/card';
import { Button } from '@/components/ui/button';
import { Badge } from '@/components/ui/badge';
import { Progress } from '@/components/ui/progress';
import { Tabs, TabsContent, TabsList, TabsTrigger } from '@/components/ui/tabs';
import { 
  Users, 
  TrendingUp, 
  BookOpen, 
  MessageSquare, 
  Star,
  Target,
  Award,
  Calendar,
  DollarSign,
  UserPlus
} from 'lucide-react';

export default function CoachDashboard() {
  // Mock data - would come from API
  const advisorMetrics = {
    totalAdvisors: 12,
    activeAdvisors: 10,
    completionRate: 78,
    avgPerformanceImprovement: 35
  };

  const recentProgress = [
    { advisorName: 'Sarah Johnson', metric: 'Client Acquisition', current: 8, target: 10, progress: 80 },
    { advisorName: 'Mike Chen', metric: 'Revenue Growth', current: 125000, target: 150000, progress: 83 },
    { advisorName: 'Emily Davis', metric: 'Meeting Conversion', current: 72, target: 80, progress: 90 }
  ];

  const curriculumModules = [
    { title: 'Prospecting Mastery', lessons: 8, completed: 6, advisors: 12 },
    { title: 'Client Relationship Building', lessons: 12, completed: 9, advisors: 8 },
    { title: 'Sales Process Optimization', lessons: 10, completed: 7, advisors: 15 }
  ];

  return (
    <ThreeColumnLayout title="Coach Dashboard">
      <div className="space-y-6">
        {/* Key Metrics */}
        <div className="grid gap-4 md:grid-cols-4">
          <Card className="bg-gradient-primary">
            <CardHeader className="flex flex-row items-center justify-between space-y-0 pb-2">
              <CardTitle className="text-sm font-medium text-white">Total Advisors</CardTitle>
              <Users className="h-4 w-4 text-white/80" />
            </CardHeader>
            <CardContent>
              <div className="text-2xl font-bold text-white">{advisorMetrics.totalAdvisors}</div>
              <p className="text-xs text-white/80">
                {advisorMetrics.activeAdvisors} active this month
              </p>
            </CardContent>
          </Card>

          <Card>
            <CardHeader className="flex flex-row items-center justify-between space-y-0 pb-2">
              <CardTitle className="text-sm font-medium">Avg Performance</CardTitle>
              <TrendingUp className="h-4 w-4 text-accent" />
            </CardHeader>
            <CardContent>
              <div className="text-2xl font-bold text-accent">+{advisorMetrics.avgPerformanceImprovement}%</div>
              <p className="text-xs text-muted-foreground">
                improvement vs. baseline
              </p>
            </CardContent>
          </Card>

          <Card>
            <CardHeader className="flex flex-row items-center justify-between space-y-0 pb-2">
              <CardTitle className="text-sm font-medium">Program Completion</CardTitle>
              <Award className="h-4 w-4 text-primary" />
            </CardHeader>
            <CardContent>
              <div className="text-2xl font-bold">{advisorMetrics.completionRate}%</div>
              <p className="text-xs text-muted-foreground">
                modules completed
              </p>
            </CardContent>
          </Card>

          <Card>
            <CardHeader className="flex flex-row items-center justify-between space-y-0 pb-2">
              <CardTitle className="text-sm font-medium">Revenue Impact</CardTitle>
              <DollarSign className="h-4 w-4 text-accent" />
            </CardHeader>
            <CardContent>
              <div className="text-2xl font-bold text-accent">$2.1M</div>
              <p className="text-xs text-muted-foreground">
                generated by advisors
              </p>
            </CardContent>
          </Card>
        </div>

        <Tabs defaultValue="advisors" className="space-y-4">
          <TabsList className="grid w-full grid-cols-4">
            <TabsTrigger value="advisors">My Advisors</TabsTrigger>
            <TabsTrigger value="curriculum">Curriculum</TabsTrigger>
            <TabsTrigger value="progress">Progress Tracking</TabsTrigger>
            <TabsTrigger value="invitations">Invitations</TabsTrigger>
          </TabsList>

          <TabsContent value="advisors" className="space-y-4">
            <div className="flex justify-between items-center">
              <h3 className="text-lg font-semibold">Active Advisors</h3>
              <Button className="gap-2">
                <UserPlus className="h-4 w-4" />
                Invite Advisor
              </Button>
            </div>
            
            <div className="grid gap-4 md:grid-cols-2 lg:grid-cols-3">
              {[1, 2, 3, 4, 5, 6].map((advisor) => (
                <Card key={advisor} className="hover:shadow-md transition-shadow">
                  <CardHeader className="pb-3">
                    <div className="flex items-center justify-between">
                      <CardTitle className="text-base">Advisor {advisor}</CardTitle>
                      <Badge variant="secondary">Active</Badge>
                    </div>
                    <CardDescription>Financial Advisor</CardDescription>
                  </CardHeader>
                  <CardContent className="space-y-3">
                    <div className="flex items-center justify-between text-sm">
                      <span>Progress</span>
                      <span className="font-medium">75%</span>
                    </div>
                    <Progress value={75} className="h-2" />
                    <div className="flex items-center gap-2 text-sm text-muted-foreground">
                      <Star className="h-3 w-3 fill-yellow-400 text-yellow-400" />
                      <span>4.8 rating</span>
                      <span>â€¢</span>
                      <span>12 clients</span>
                    </div>
                    <Button variant="outline" size="sm" className="w-full">
                      View Details
                    </Button>
                  </CardContent>
                </Card>
              ))}
            </div>
          </TabsContent>

          <TabsContent value="curriculum" className="space-y-4">
            <div className="flex justify-between items-center">
              <h3 className="text-lg font-semibold">Curriculum Modules</h3>
              <Button className="gap-2">
                <BookOpen className="h-4 w-4" />
                Create Module
              </Button>
            </div>

            <div className="space-y-4">
              {curriculumModules.map((module, index) => (
                <Card key={index}>
                  <CardHeader>
                    <div className="flex items-center justify-between">
                      <CardTitle className="text-lg">{module.title}</CardTitle>
                      <Badge variant="outline">{module.advisors} advisors enrolled</Badge>
                    </div>
                  </CardHeader>
                  <CardContent className="space-y-4">
                    <div className="flex items-center justify-between text-sm">
                      <span>{module.completed} of {module.lessons} lessons completed</span>
                      <span className="font-medium">{Math.round((module.completed / module.lessons) * 100)}%</span>
                    </div>
                    <Progress value={(module.completed / module.lessons) * 100} className="h-2" />
                    <div className="flex gap-2">
                      <Button variant="outline" size="sm">Edit Module</Button>
                      <Button variant="outline" size="sm">View Analytics</Button>
                    </div>
                  </CardContent>
                </Card>
              ))}
            </div>
          </TabsContent>

          <TabsContent value="progress" className="space-y-4">
            <div className="flex justify-between items-center">
              <h3 className="text-lg font-semibold">Recent Progress Updates</h3>
              <Button variant="outline" className="gap-2">
                <Target className="h-4 w-4" />
                Set Goals
              </Button>
            </div>

            <div className="space-y-4">
              {recentProgress.map((progress, index) => (
                <Card key={index}>
                  <CardContent className="pt-6">
                    <div className="space-y-3">
                      <div className="flex items-center justify-between">
                        <div>
                          <h4 className="font-medium">{progress.advisorName}</h4>
                          <p className="text-sm text-muted-foreground">{progress.metric}</p>
                        </div>
                        <Badge variant={progress.progress >= 80 ? "default" : "secondary"}>
                          {progress.progress}%
                        </Badge>
                      </div>
                      <div className="space-y-2">
                        <div className="flex justify-between text-sm">
                          <span>Progress: {typeof progress.current === 'number' && progress.current > 1000 ? 
                            `$${progress.current.toLocaleString()}` : progress.current}
                          </span>
                          <span>Target: {typeof progress.target === 'number' && progress.target > 1000 ? 
                            `$${progress.target.toLocaleString()}` : progress.target}
                          </span>
                        </div>
                        <Progress value={progress.progress} className="h-2" />
                      </div>
                    </div>
                  </CardContent>
                </Card>
              ))}
            </div>
          </TabsContent>

          <TabsContent value="invitations" className="space-y-4">
            <div className="flex justify-between items-center">
              <h3 className="text-lg font-semibold">Pending Invitations</h3>
              <Button className="gap-2">
                <MessageSquare className="h-4 w-4" />
                Send Invitation
              </Button>
            </div>

            <Card>
              <CardContent className="pt-6">
                <div className="text-center py-8">
                  <MessageSquare className="h-12 w-12 mx-auto text-muted-foreground mb-4" />
                  <h4 className="text-lg font-medium mb-2">No pending invitations</h4>
                  <p className="text-muted-foreground mb-4">
                    Start growing your coaching practice by inviting new advisors.
                  </p>
                  <Button>Send First Invitation</Button>
                </div>
              </CardContent>
            </Card>
          </TabsContent>
        </Tabs>
      </div>
    </ThreeColumnLayout>
  );
}