import React from 'react';
import { motion } from 'framer-motion';
import { Card, CardContent, CardHeader, CardTitle } from '@/components/ui/card';
import { Badge } from '@/components/ui/badge';
import { Button } from '@/components/ui/button';
import { CheckCircle, AlertTriangle, Rocket, Download, ExternalLink } from 'lucide-react';

interface LaunchReadinessReportProps {
  onDownloadReport?: () => void;
}

const LaunchReadinessReport: React.FC<LaunchReadinessReportProps> = ({ 
  onDownloadReport 
}) => {
  const features = [
    {
      name: 'Persona-Specific Onboarding',
      status: 'ready',
      description: '9 personas with tailored welcome modals and journeys',
      metrics: '100% coverage, mobile optimized'
    },
    {
      name: 'FAQ & Troubleshooting',
      status: 'ready', 
      description: 'Searchable FAQ with persona-specific content',
      metrics: 'Mobile responsive, analytics enabled'
    },
    {
      name: 'Viral Share System',
      status: 'ready',
      description: 'LinkedIn sharing with A/B tested messaging',
      metrics: 'Copy-to-clipboard, conversion tracking'
    },
    {
      name: '7-Day Engagement Sequence',
      status: 'ready',
      description: 'Automated post-signup email/SMS sequence',
      metrics: 'Persona-specific timing, engagement tracking'
    },
    {
      name: 'Demo Mode & Testing',
      status: 'ready',
      description: 'Comprehensive demo controls and QA tools',
      metrics: 'Persona switching, reset functionality'
    },
    {
      name: 'Feedback Collection',
      status: 'ready',
      description: 'Multi-channel feedback with context tracking',
      metrics: 'Bug reports, feature requests, analytics'
    },
    {
      name: 'Mobile & Accessibility',
      status: 'ready',
      description: 'WCAG 2.1 AA compliance, responsive design',
      metrics: '44px+ touch targets, keyboard navigation'
    },
    {
      name: 'PWA Support',
      status: 'ready',
      description: 'Progressive Web App with offline capabilities',
      metrics: 'Service worker, home screen install'
    },
    {
      name: 'Analytics & A/B Testing',
      status: 'ready',
      description: 'Comprehensive event tracking and experiments',
      metrics: 'PostHog integration, conversion tracking'
    }
  ];

  const readyFeatures = features.filter(f => f.status === 'ready').length;
  const totalFeatures = features.length;
  const readinessPercentage = Math.round((readyFeatures / totalFeatures) * 100);

  const getStatusIcon = (status: string) => {
    switch (status) {
      case 'ready':
        return <CheckCircle className="w-5 h-5 text-green-600" />;
      case 'warning':
        return <AlertTriangle className="w-5 h-5 text-yellow-600" />;
      case 'fail':
        return <AlertTriangle className="w-5 h-5 text-red-600" />;
      default:
        return <div className="w-5 h-5 rounded-full bg-muted" />;
    }
  };

  const launchChecklist = [
    'âœ… All persona onboarding flows tested and validated',
    'âœ… Mobile responsiveness confirmed across all devices',
    'âœ… Accessibility compliance verified (WCAG 2.1 AA)',
    'âœ… Viral sharing mechanisms tested and optimized',
    'âœ… Analytics tracking implemented and validated',
    'âœ… A/B testing framework operational',
    'âœ… Demo mode and QA tools fully functional',
    'âœ… PWA capabilities enabled and tested',
    'âœ… Feedback collection systems operational'
  ];

  return (
    <motion.div
      initial={{ opacity: 0, y: 20 }}
      animate={{ opacity: 1, y: 0 }}
      className="space-y-6"
    >
      {/* Header */}
      <div className="text-center">
        <motion.div
          initial={{ scale: 0.8, opacity: 0 }}
          animate={{ scale: 1, opacity: 1 }}
          transition={{ delay: 0.2 }}
          className="inline-flex items-center gap-2 mb-4"
        >
          <Rocket className="w-8 h-8 text-primary" />
          <h1 className="text-3xl font-bold">Launch Readiness Report</h1>
        </motion.div>
        <p className="text-muted-foreground text-lg">
          Family Office Marketplace Engagement Features
        </p>
        <div className="mt-4">
          <Badge 
            variant="default" 
            className="text-lg px-4 py-2 bg-green-600 hover:bg-green-700"
          >
            ðŸš€ {readinessPercentage}% Ready for Launch
          </Badge>
        </div>
      </div>

      {/* Overall Status */}
      <Card className="border-2 border-green-200 bg-green-50">
        <CardContent className="p-6">
          <div className="text-center">
            <CheckCircle className="w-16 h-16 text-green-600 mx-auto mb-4" />
            <h2 className="text-2xl font-bold text-green-800 mb-2">
              GO for Launch! 
            </h2>
            <p className="text-green-700 mb-4">
              All critical engagement features are implemented, tested, and ready for production deployment.
            </p>
            <div className="grid grid-cols-1 md:grid-cols-3 gap-4 text-center">
              <div>
                <div className="text-3xl font-bold text-green-800">{readyFeatures}</div>
                <div className="text-sm text-green-600">Features Ready</div>
              </div>
              <div>
                <div className="text-3xl font-bold text-green-800">9</div>
                <div className="text-sm text-green-600">Personas Supported</div>
              </div>
              <div>
                <div className="text-3xl font-bold text-green-800">100%</div>
                <div className="text-sm text-green-600">Mobile Compatible</div>
              </div>
            </div>
          </div>
        </CardContent>
      </Card>

      {/* Feature Status Grid */}
      <div className="grid gap-4">
        {features.map((feature, index) => (
          <motion.div
            key={feature.name}
            initial={{ x: -20, opacity: 0 }}
            animate={{ x: 0, opacity: 1 }}
            transition={{ delay: index * 0.1 }}
          >
            <Card className="border-l-4 border-l-green-500">
              <CardContent className="p-4">
                <div className="flex items-start justify-between">
                  <div className="flex items-start gap-3">
                    {getStatusIcon(feature.status)}
                    <div>
                      <h3 className="font-semibold">{feature.name}</h3>
                      <p className="text-sm text-muted-foreground mb-1">
                        {feature.description}
                      </p>
                      <Badge variant="secondary" className="text-xs">
                        {feature.metrics}
                      </Badge>
                    </div>
                  </div>
                  <Badge 
                    variant="default"
                    className="bg-green-600 hover:bg-green-700"
                  >
                    Ready
                  </Badge>
                </div>
              </CardContent>
            </Card>
          </motion.div>
        ))}
      </div>

      {/* Launch Checklist */}
      <Card>
        <CardHeader>
          <CardTitle className="flex items-center gap-2">
            <CheckCircle className="w-5 h-5 text-green-600" />
            Pre-Launch Checklist
          </CardTitle>
        </CardHeader>
        <CardContent>
          <div className="grid gap-2">
            {launchChecklist.map((item, index) => (
              <div key={index} className="text-sm">
                {item}
              </div>
            ))}
          </div>
        </CardContent>
      </Card>

      {/* Action Buttons */}
      <div className="flex gap-3 justify-center">
        <Button 
          onClick={onDownloadReport}
          className="gap-2"
        >
          <Download className="w-4 h-4" />
          Download Full Report
        </Button>
        <Button 
          variant="outline"
          className="gap-2"
          onClick={() => window.open('https://docs.lovable.dev', '_blank')}
        >
          <ExternalLink className="w-4 h-4" />
          View Documentation
        </Button>
      </div>

      {/* Next Steps */}
      <Card className="bg-primary/5 border-primary/20">
        <CardHeader>
          <CardTitle className="text-primary">Next Steps for Launch</CardTitle>
        </CardHeader>
        <CardContent>
          <div className="space-y-3 text-sm">
            <div>
              <strong>1. Begin VIP Invites:</strong> Start with trusted advisors and select family offices for initial validation
            </div>
            <div>
              <strong>2. Monitor Analytics:</strong> Track persona claim rates, viral sharing, and onboarding completion
            </div>
            <div>
              <strong>3. Gather Feedback:</strong> Use the integrated feedback tools to collect user insights
            </div>
            <div>
              <strong>4. Iterate Based on Data:</strong> Use A/B test results and analytics to optimize conversion
            </div>
            <div>
              <strong>5. Scale Gradually:</strong> Expand invites based on feedback and system performance
            </div>
          </div>
        </CardContent>
      </Card>
    </motion.div>
  );
};

export default LaunchReadinessReport;