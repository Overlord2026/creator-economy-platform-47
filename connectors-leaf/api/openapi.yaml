openapi: 3.0.3
info:
  title: Connector & Evidence Service API
  description: Financial data connectors and evidence service for wealth management platforms
  version: 1.0.0
  contact:
    name: Platform Engineering Team
    email: platform@company.com

servers:
  - url: https://your-project-ref.supabase.co/functions/v1
    description: Production
  - url: http://localhost:54321/functions/v1
    description: Local Development

security:
  - BearerAuth: []

paths:
  /connector-sync:
    post:
      summary: Trigger data synchronization
      description: Initiate sync for a specific connection
      tags: [Connectors]
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required: [connection_id]
              properties:
                connection_id:
                  type: string
                  format: uuid
                sync_type:
                  type: string
                  enum: [full, incremental]
                  default: incremental
                force:
                  type: boolean
                  default: false
      responses:
        '200':
          description: Sync completed successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SyncResult'
        '400':
          $ref: '#/components/responses/BadRequest'
        '500':
          $ref: '#/components/responses/InternalError'

  /notarization-orchestrator:
    post:
      summary: Create notarization session
      description: Initialize notarization with appropriate provider based on state policies
      tags: [Notarization]
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateNotarizationRequest'
      responses:
        '200':
          description: Notarization session created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotarizationSession'

  /ingest/custody-sync:
    post:
      summary: Trigger custody data synchronization
      description: Initiate sync for custody accounts, positions, and transactions
      tags: [Data Ingestion]
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required: [entity_id, connector_account_id]
              properties:
                entity_id:
                  type: string
                  format: uuid
                connector_account_id:
                  type: string
                  format: uuid
                sync_mode:
                  type: string
                  enum: [delta, full]
                  default: delta
      responses:
        '200':
          description: Sync completed successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SyncResult'

  /ingest/heldaway-sync:
    post:
      summary: Trigger held-away account synchronization
      description: Sync held-away account data from external providers
      tags: [Data Ingestion]
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required: [entity_id, provider_account_id]
              properties:
                entity_id:
                  type: string
                  format: uuid
                provider_account_id:
                  type: string
                sync_mode:
                  type: string
                  enum: [delta, full]
                  default: delta
      responses:
        '200':
          description: Sync completed successfully

  /ingest/alts-webhook:
    post:
      summary: Alternative investments webhook
      description: Receive webhook notifications for alternative investment updates
      tags: [Data Ingestion]
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                event_type:
                  type: string
                data:
                  type: object
                timestamp:
                  type: string
                  format: date-time
      responses:
        '200':
          description: Webhook processed successfully

  /notary/schedule:
    post:
      summary: Schedule notarization session
      description: Create and schedule a notarization session
      tags: [Notarization]
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateNotarizationRequest'
      responses:
        '200':
          description: Notarization session created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotarizationSession'

  /reports/render:
    post:
      summary: Generate report on demand
      description: Create and generate a report with specified parameters
      tags: [Reports]
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateReportRequest'
      responses:
        '200':
          description: Report generation initiated
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Report'

  /reports:
    get:
      summary: List available reports
      description: Get list of reports user can access with persona-based filtering
      tags: [Reports]
      parameters:
        - name: portfolio_id
          in: query
          schema:
            type: string
            format: uuid
        - name: persona
          in: query
          schema:
            type: string
            enum: [client, advisor, cpa, admin]
        - name: report_type
          in: query
          schema:
            type: string
        - name: from_date
          in: query
          schema:
            type: string
            format: date
        - name: to_date
          in: query
          schema:
            type: string
            format: date
      responses:
        '200':
          description: List of available reports
          content:
            application/json:
              schema:
                type: object
                properties:
                  reports:
                    type: array
                    items:
                      $ref: '#/components/schemas/Report'

  /exceptions:
    get:
      summary: List exceptions
      description: Get list of data exceptions with filtering and pagination
      tags: [Exceptions]
      parameters:
        - name: entity_id
          in: query
          schema:
            type: string
            format: uuid
        - name: severity
          in: query
          schema:
            type: string
            enum: [low, medium, high, critical]
        - name: status
          in: query
          schema:
            type: string
            enum: [open, acknowledged, resolved]
            default: open
        - name: page
          in: query
          schema:
            type: integer
            default: 1
        - name: limit
          in: query
          schema:
            type: integer
            default: 50
      responses:
        '200':
          description: List of exceptions
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/Exception'
                  pagination:
                    $ref: '#/components/schemas/Pagination'

  /exceptions/{id}/resolve:
    post:
      summary: Resolve exception
      description: Mark an exception as resolved with resolution notes
      tags: [Exceptions]
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
            format: uuid
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required: [resolved_by, resolution_notes]
              properties:
                resolved_by:
                  type: string
                  format: uuid
                resolution_notes:
                  type: string
                resolution_action:
                  type: string
      responses:
        '200':
          description: Exception resolved successfully

  /billing/summary:
    get:
      summary: Get billing summary
      description: Retrieve billing data and usage metrics for entity
      tags: [Billing]
      parameters:
        - name: entity_id
          in: query
          required: true
          schema:
            type: string
            format: uuid
        - name: from
          in: query
          required: true
          schema:
            type: string
            format: date
        - name: to
          in: query
          schema:
            type: string
            format: date
        - name: granularity
          in: query
          schema:
            type: string
            enum: [daily, weekly, monthly]
            default: daily
      responses:
        '200':
          description: Billing summary data
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BillingSummary'

components:
  securitySchemes:
    BearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT

  schemas:
    SyncResult:
      type: object
      properties:
        provider:
          type: string
        accounts_synced:
          type: integer
        transactions_synced:
          type: integer
        positions_synced:
          type: integer
        duration_ms:
          type: integer

    CreateNotarizationRequest:
      type: object
      required: [document_id, user_id, state_jurisdiction]
      properties:
        document_id:
          type: string
          format: uuid
        user_id:
          type: string
          format: uuid
        state_jurisdiction:
          type: string
          example: "CA"
        preferred_provider:
          type: string
          enum: [docusign, notarycam]

    NotarizationSession:
      type: object
      properties:
        notarization_id:
          type: string
          format: uuid
        session_url:
          type: string
          format: uri
        provider:
          type: string
          enum: [docusign, notarycam]

    CreateReportRequest:
      type: object
      required: [report_type]
      properties:
        report_type:
          type: string
          enum: [account_summary, transaction_history, position_summary, performance, tax_summary, notarization_certificate]
        parameters:
          type: object
        file_format:
          type: string
          enum: [pdf, csv, json, xlsx]
          default: pdf

    Report:
      type: object
      properties:
        id:
          type: string
          format: uuid
        report_type:
          type: string
        status:
          type: string
          enum: [queued, generating, completed, failed]
        file_url:
          type: string
          format: uri
        created_at:
          type: string
          format: date-time

    Exception:
      type: object
      properties:
        id:
          type: string
          format: uuid
        entity_id:
          type: string
          format: uuid
        account_id:
          type: string
          format: uuid
        exception_type:
          type: string
        severity:
          type: string
          enum: [low, medium, high, critical]
        status:
          type: string
          enum: [open, acknowledged, resolved]
        description:
          type: string
        metadata:
          type: object
        created_at:
          type: string
          format: date-time

    BillingSummary:
      type: object
      properties:
        entity_id:
          type: string
          format: uuid
        period:
          type: object
          properties:
            from:
              type: string
              format: date
            to:
              type: string
              format: date
        total_cost:
          type: number
        total_accounts:
          type: integer
        total_alt_positions:
          type: integer
        total_notarizations:
          type: integer
        cost_breakdown:
          type: object
          properties:
            base_cost:
              type: number
            alts_cost:
              type: number
            notary_cost:
              type: number
            vendor_cost:
              type: number

    Pagination:
      type: object
      properties:
        page:
          type: integer
        limit:
          type: integer
        total:
          type: integer
        total_pages:
          type: integer
        has_next:
          type: boolean
        has_prev:
          type: boolean

  responses:
    BadRequest:
      description: Bad request
      content:
        application/json:
          schema:
            type: object
            properties:
              error:
                type: string
    
    InternalError:
      description: Internal server error
      content:
        application/json:
          schema:
            type: object
            properties:
              error:
                type: string