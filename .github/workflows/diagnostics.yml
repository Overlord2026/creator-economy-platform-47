
name: Application Diagnostics

on:
  push:
    branches: [ main, master, develop ]
  pull_request:
    branches: [ main, master, develop ]
  # Allow manual triggering
  workflow_dispatch:
  # Run daily to catch issues early
  schedule:
    - cron: '0 0 * * *'

jobs:
  run-diagnostics:
    name: Run Application Diagnostics
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        
      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'
          cache: 'npm'
          
      - name: Install dependencies
        run: npm ci
        
      - name: Build application
        run: npm run build
        
      - name: Run diagnostics tests
        run: node ./dist/services/diagnostics/ci-scripts/run-diagnostics.js --outputFile=diagnostics-report.json --failOnError=true --notifyOnWarning=true
        
      - name: Upload diagnostics report
        if: always() # Upload even if tests fail
        uses: actions/upload-artifact@v3
        with:
          name: diagnostics-report
          path: diagnostics-report.json
          
      - name: Run Jest tests for diagnostics
        run: npm test -- --testPathPattern=services/diagnostics
        
      # Notify team on failure via GitHub notifications
      - name: Notify team on failure
        if: failure()
        uses: actions/github-script@v6
        with:
          script: |
            const { repo, owner } = context.repo;
            const run_id = context.runId;
            const run_url = `https://github.com/${owner}/${repo}/actions/runs/${run_id}`;
            
            github.rest.issues.create({
              owner,
              repo,
              title: `ðŸš¨ Diagnostics check failed on ${context.payload.ref}`,
              body: `Diagnostics tests failed on ${context.payload.ref}. [View diagnostics report](${run_url}).\n\nSee details in the [Actions tab](${run_url}).`
            });
